name: Build and Publish Development Docker Images

on:
  push:
    branches:
      - dev
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: dostini
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/dostini/api

      - name: Crate env file with secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DEV_DATABASE_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.DEV_JWT_SECRET }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "PASSWORD_RESET_LINK=127.0.0.1" >> .env
          echo "JWT_VALID_TIME_ACCESS=1200" >> .env
          echo "JWT_VALID_TIME_REFRESH=604800" >> .env
          echo "JWT_VALID_TIME_PWD_RESET=600" >> .env
          echo "JWT_ALGORITHM=HS256" >> .env
          echo "MAIL_USERNAME=kosjenka.readingapp@gmail.com" >> .env
          echo "MAIL_PORT=587" >> .env
          echo "MAIL_SERVER=smtp.gmail.com" >> .env
          echo "MAIL_FROM_NAME=Kosjenka Support" >> .env
          echo "SUPERADMIN_LOGIN=superadmin@gmail.com" >> .env
          echo "SUPERADMIN_PASSWORD={{ secrets.DEV_SUPERADMIN_PASSWORD }}" >> .env
          echo "PASSWORD_RESET_LINK=https://admin-kosjenka-dev.vercel.app/password/reset"

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --local-only --image ghcr.io/dostini/api:dev
